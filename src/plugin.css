/**
 * css for videojs-frames
 * With the default plugins for postcss you can
 * - @import files, they will be inlined during build
 * - not worry about browser prefixes, they will be handled
 * - nest selectors. This follows the css specification that is
 *   currently out on some browsers. See https://tabatkins.github.io/specs/css-nesting/
 * - custom properties (aka variables) via the var(--var-name) syntax. See
 *   https://www.w3.org/TR/css-variables-1/
 */


/* Note: all vars must be defined here, there are no "local" vars */
:root {
  --main-color: red;
  --base-font-size: 9;
  --font-size: 7;
}
 
.video-js {

  &.vjs-frames {
    /* This class is added to the video.js element by the plugin by default. */
    display: block;

    & .remove-me, & .remove-me-too, &.finally-remove-me {
      /* examples of postcss syntax, you probably want to remove this */

      color: var(--main-color);

      /**
       * Note that you have to use calc and multiply by a value with a unit
       * prepending the unit like `var(--base-font-size)px` or
       * `calc(10 * var(--base-font-size)em` will NOT work!
       */
      font-size: calc(var(--font-size) * 8 * var(--base-font-size) * 1px);

    }
  }
}

.vjs-timecode-menu {
      width: auto !important;
    font-size: 18px !important;
    padding: 15px !important;
}

.vjs-icon-cog {
  font-size: 18px !important;
}
 
.vjs-om-menu-header {
    text-transform: uppercase;
    white-space: nowrap;
    text-align: left;
    padding: 8px;
    background: black;
}

.vjs-frames .vjs-control-bar {
    font-size: 1.2em !important;
    height: 4em !important;
    padding: 0 1% !important;
}

.vjs-frames .vjs-button > .vjs-icon-placeholder:before {
    display: flex;
    flex-direction: row;
    align-items: center; 
    justify-content: center;
}
